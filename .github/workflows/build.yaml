name: flask-helloworld
on:
  push:
    branches: [master]
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Run a command remotely
        id: migrate
        # uses: docker://evaneos/ssh-action:0.1.0
        uses: JimCronqvist/action-ssh@master
        with:
          hosts: deploy@54.251.229.85
          # user: deploy
          privateKey: ${{ secrets.PRIVATE_SSH_KEY }}
          # known_hosts: StrictHostKeyChecking=no
          command: |
            cd /opt/upbase/sme-utilities
            if [[ $(yarn migration:run) == *"Done in"* ]]; then
              echo "It's there."
              echo "::set-output name=migrate_success::true" 1>&1
            fi

            # git pull
            # sudo docker-compose -f docker-compose-prod.yml up -d --build

      - name: Log
        run: echo ${{ steps.migrate.outputs.migrate_success }}
      - name: Notify if new commits
        if: ${{ steps.migrate.outputs.migrate_success }}
        uses: ivanmilov/telegram_notify_action@v1
        with:
          api_key: "1025176578:AAGTvesY3-NR-RlblqevmXIOMXxSoZPNHiQ"
          chat_id: "-403329421"
          message: "Test noti"
      # - name: Checkout
      #   uses: actions/checkout@v2
      # - name: Login Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      # - name: Setup Docker Buildx
      #   uses: docker/setup-buildx-action@v1
      #   id: buildx
      # - name: Cache Docker Image Layers
      #   uses: actions/cache@v2
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-buildx-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-buildx-
      # - name: Build and Push Docker Image
      #   uses: docker/build-push-action@v2
      #   id: docker_build
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/flask-helloworld
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache
      # - name: Verify
      #   run: echo ${{ steps.docker_build.outputs.digest }}
      # - name: Notify if new commits
      #   if: ${{ true }}
      #   uses: ivanmilov/telegram_notify_action@v1
      #   with:
      #     api_key: "1025176578:AAGTvesY3-NR-RlblqevmXIOMXxSoZPNHiQ"
      #     chat_id: "-403329421"
      #     message: "Test noti"
      # - name: Install Node.js
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: '10.x'
      # - name: Install npm dependencies
      #   run: npm install
      # - name: Run build task
      #   run: npm run build
      # - name: Deploy to Server
      #   uses: easingthemes/ssh-deploy@v2.1.5
      #   env:
      #       SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
      #       ARGS: "-rltgoDzvO --delete"
      #       SOURCE: "build/"
      #       REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
      #       REMOTE_USER: ${{ secrets.REMOTE_USER }}
      #       TARGET: ${{ secrets.REMOTE_TARGET }}
